name: Java CI with Maven and Node.js

on:
  push:
    branches: [ "master", "feature/spring*" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  compile_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Compile backend
        run: mvn -B compile --file ./pom.xml
        working-directory: ./backend-spring/dreamed-house/

      - name: Tests
        run: mvn -B test --file ./pom.xml
        working-directory: ./backend-spring/dreamed-house/  

  build_deploy:

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.ref != 'refs/heads/master'
    needs: compile_test
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install frontend dependencies
      run: pnpm install
      working-directory: ./frontend/

    - name: Build frontend
      run: pnpm build
      working-directory: ./frontend/

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build backend
      run: mvn -B package --file ./pom.xml -DskipTests
      working-directory: ./backend-spring/dreamed-house/

    - name: Set version variable
      id: set_version
      run: |
        echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV 
        echo "Version is $VERSION"
      working-directory: ./backend-spring/dreamed-house/

    - name: Deploy Github Package
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml -Dmaven.test.skip
      working-directory: ./backend-spring/dreamed-house/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     

    - name: Move JAR Artifact
      run: |
        mv ./target/*.jar $GITHUB_WORKSPACE/
      working-directory: ./backend-spring/dreamed-house/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dreamed-house-${{ env.VERSION }}
        path: ./dreamed-house-${{ env.VERSION }}.jar  

    - name: Create Release Tag
      run: |
        git config --global user.email "douglasgallardoz11@gmail.com"
        git config --global user.name "Douglas Gallardo"
        git tag -a v${{ env.VERSION }} -m "Release version ${{ env.VERSION }}"
        git push origin v${{ env.VERSION }}
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PEM_KEY }}
        script: |
          
          # Copiar el JAR al directorio destino en la instancia EC2
          scp -i /dev/shm/id_rsa ./dreamed-house-${{ env.VERSION }}.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_DESTINATION_PATH }}/dreamed-house.jar

          # Acceder a la instancia EC2 y mover al directorio correcto (ajusta seg√∫n tu estructura)
          ssh -i /dev/shm/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "sudo systemctl restart casa-deseada.service "


    
    